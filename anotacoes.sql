/*MODELAGEM BASICA

ENTIDADES = TABELA
CAMPOS  = ATRIBUTOS*/

CLIENTE

NOME - CARACTER (30)
CPF - NUMERICO (11)
EMAIL - CARACTER (30)
TELEFONE - CARACTER (30)
ENDERECO - CARACTER (100)
SEXO - CARACTER (1)

/*PROCESSOS DE MODELANGEM */

/* FASE 01 E FASE 02  - AD ADM DE DADOS
MODELAGEM CONCEITUAL - RASCUNHO
MODELAGEM LOGICA - QUALQUER PROGRAMA DE MODELAGEM*/

/*FASE 03 - DBA / AD
MODELAGEM FISICA*/

/*INICIANDO A MODELAGEM FISICA*/

/*CRIANDO O BANCO DE DADOS*/

CREATE DATABASE PROJETO; /*CRIAÇÃO DO BANCO DE DADOS PROJETO*/

/*CONECTANDO-SE AO BANCO DE DADOS*/

USE PROJETO;

/*VERIFICANDO ONDE ESTOU CONECTADO*/
STATUS;

/*CRIANDO A TABELA CLIENTES*/

CREATE TABLE CLIENTE(
	NOME VARCHAR(30),
	CPF INT (11),
	EMAIL VARCHAR (30),
	TELEFONE VARCHAR (30),
	ENDERECO VARCHAR (100),
	SEXO CHAR(1)

);

/*VERIFICANDO AS TABELAS DO BANCO*/

SHOW TABLES;

/*VERIFICANDO OS BANCO DE DADOS NO SISTEMA*/

SHOW DATABASES;

/*DESCOBRINDO COMO É A ESTRUTURA DE UMA TABELA*/

DESC CLIENTE; 

/*INSERINDO DADOS NA TABELA - INSERT INTO NOME_DA_TABELA*/

/*FORMATO 01 - OMITINDO COLUNAS(CAMPOS)*/

INSERT INTO CLIENTE VALUES ('JOAO',988638273,'JOAO@GMAIL.COM','22923110','MAIA LACERDA - ESTACIO - RIO DE JANEIRO - RJ','M');
INSERT INTO CLIENTE VALUES ('CELIA',541521456,'CELIA@GMAIL.COM','25078869','RIACHUELO - CENTRO - RIO DE JANEIRO - RJ','F');
INSERT INTO CLIENTE VALUES ('JORGE',885755896,NULL,'58748895','OSCAR CURY - BOM RETIRO - PATOS DE MINAS - MG','M');

/*FORMATO 02 - COLOCANDO AS COLUNAS*/

INSERT INTO CLIENTE (NOME,SEXO,ENDERECO, TELEFONE, CPF) VALUES ('LILIAN', 'F','SENADOR SOARES - TIJUCA - RIO DE JANEIRO - RJ','947785696',887774856);

/*FORMATO 03 - INSERT COMPACTO - SOMENTE MYSQL*/

INSERT INTO CLIENTE VALUES ('ANA',85548962,'ANA@GLOBO.COM','548556985','PRES ANTONIO CARLOS - CENTRO - SAO PAULO - SP','F'),
('CARLA',7745828,'CARLA@TERATI.COM','66587458','SAMUEL SILVA - CENTRO - BELO HORIZONTE - MG','F');

/*----------*/

/*COMANDO SELECT*/

/*seleção, projeção e junção*/

/*projeção/construção*/

SELECT NOW() AS DATA_HORA, 'SERGIO PEDRO' AS NOME_CLIENTE;

SELECT 'SERGIO PEDRO';

/*seleção*/

SELECT NOME AS CLIENTE, SEXO, EMAIL FROM CLIENTE;

SELECT NOME, SEXO, EMAIL, ENDERECO, NOW() AS HORA FROM CLIENTE;

SELECT * FROM CLIENTE; /*DIMINUI A EFICIENCIA DA PESQUISA*/

/*FILTRANDO DADOS COM WHERE E LIKE*/

/*----------*/

/*FILTRANDO*/

SELECT NOME, SEXO FROM CLIENTE
WHERE SEXO = 'M';

SELECT NOME, ENDERECO FROM CLIENTE
WHERE SEXO = 'F';

/*UTILIZANDO LIKE E CARACTER CORINGA*/

/*'%' -> QUALQUER COISA*/
/*'_' -> UM CARACTER DESCONHECIDO */

SELECT NOME, SEXO FROM CLIENTE
WHERE ENDERECO LIKE '%RJ'; /*COMEÇA COM QUALQUER COISA*/

SELECT NOME, SEXO FROM CLIENTE
WHERE ENDERECO LIKE 'OSCAR%'; /*TERMINA COM QUALQUER COISA*/

SELECT NOME, SEXO FROM CLIENTE
WHERE ENDERECO LIKE '%CENTRO%';/*COMEÇA E TERMINA COM QUALQUER COISA*/

/*OPERADORES LOGICOS*/

/*OR -> PARA QUE A SAIDA DA QUERY SEJA VERDADEIRA, BASTA QUE APENAS UMA CONDIÇÃO SEJA VERDAEIRA
AND -> PARA QUE A SAIDA DA QUERY SEJA VERDADEIRA, TODAS AS CONDIÇÔES SEJAM VERDADEIRAS*/

SHOW DATABASES;
USE PROJETO;
SELECT * FROM CLIENTE;


/*OR - OU*/

SELECT NOME, SEXO, ENDERECO FROM CLIENTE
WHERE
SEXO = 'M' OR ENDERECO LIKE '%RJ';

SELECT NOME, SEXO, ENDERECO FROM CLIENTE
WHERE
SEXO = 'F' OR ENDERECO LIKE '%ESTACIO%';


/*AND - E*/

SELECT NOME, SEXO, ENDERECO FROM CLIENTE
WHERE
SEXO = 'M' AND ENDERECO LIKE '%RJ';

SELECT NOME, SEXO, ENDERECO FROM CLIENTE
WHERE
SEXO = 'F' AND ENDERECO LIKE '%ESTACIO%';

/*FILTRANDO VALORES NULOS*/
/*USO DO "IS NULL " E "IS NOT NULL"*/

SELECT NOME, SEXO, ENDERECO FROM CLIENTE
WHERE EMAIL IS NULL;

SELECT NOME, SEXO, ENDERECO FROM CLIENTE
WHERE EMAIL IS NOT NULL;

/*----------*/

/*COUNT (*), GROUP BY, PERFORMANCE COM OPERADORES LOGICOS*/

/*CONTANDO OS REGISTROS DE UMA TABELA*/

SELECT COUNT(*) AS "CONTIDADE DE REGISTROS DA TABELA CLIENTE"
FROM CLIENTE; /*CONTA TODOS OS REGISTROS NA TABELA CLIENTE*/

/*AGRUPADOR*/

SELECT SEXO, COUNT(*)
FROM CLIENTE
GROUP BY SEXO; /*AGRUPA OS DADOS ENTORNO DO CAMPO "SEXO"*/

/*----------*/

/*PERFORMANCE EM OPERADORES LOGICOS*/

/*NO CASO OR - COLOCAR A CONDIÇÃO COM MAIOR INCIDENCIA DE VERDADEIRO NA FRENTE,
PPOIS ASSIM NÃO SERÁ AVALIADO A SEGUNDA CONDIÇÃO,
DADO QUE, SE A PRIMEIRA CONDIÇÃO FOR VERDADEIRA, A PREMISSA TODA É VERDADEIRA*/

/*NO CASO AND - COLOCAR A CONDIÇÃO COM MENOR INCIDENCIA DE VERDADEIRO NA FRENTE,
PPOIS ASSIM NÃO SERÁ AVALIADO A SEGUNDA CONDIÇÃO,
DADO QUE, SE A PRIMEIRA CONDIÇÃO FOR FALSA, A PREMISSA TODA É FALSA*/

/*----------*/

/*UTILIZANDO O UPDATE PARA ATUALIZAR VALORES*/
/*HÁ DUAS FORMAS DE ATUALIZAÇÃO DE VALORES UPDATE SEM FILTRO E COM FILTRO*/

/*UPDATE SEM FILTRO
ATUALIZA TODOS OS DADOS DE UM DETERMINADO CAMPO DE UMA VEZ*/
UPDATE CLIENTE SET EMAIL = 'LILIAN@GMAIL.COM';

/*UPDATE COM FILTRO - WHERE
ATUALIZA UM DETERMINADO REGISTRO DE UM CAMPO*/
UPDATE CLIENTE
SET EMAIL = 'JOAO@GMAIL.COM'
WHERE NOME = 'JOAO';

/*----------*/

/*DELETANDO REGISTROS COM A CLAUSULA DELETE*/

/*DELETANDO TODOS OS REGISTROS DE UMA TABELA*/
DELETE FROM CLIENTE;

/*ANTES DE DELETAR VERIFICA O QUE ESTA DELETETANDO*/
SELECT COUNT(*) FROM CLIENTE; -- TOTAL 6 REGISTROS

/*DETERMINAR QUANTOS REGISTROS VÃO APARECER PELO FILTRO
ANTES DE DELETAR*/
SELECT COUNT(*) FROM CLIENTE -- TOTAL 1 REGISTRO
WHERE NOME = 'ANA';

/*DELETANDO UM DETERMINADO REGISTRO DE UMA TABELA*/
DELETE FROM CLIENTE
WHERE NOME = 'ANA';

/*CONTAGEM FINAL, DEPOIS DO DELETE*/
SELECT COUNT(*) FROM CLIENTE; -- TOTAL 5 REGISTROS

/*----------*/

/*PRIMEIRA FORMA NORMAL
3 REGRAS:
1. TODO CAMPO VETORIZADO SE TORNÁ OUTRA TABELA.
CAMPO VETORIZADO É TODO CAMPO QUE APRESENTA ALGO COMO UM VETOR  DENTRO DELE.
VARIOS DADOS DO MESMO TIPO (VETOR).
EXEMPLO:
vetor [VERDE, AMARELO, LARANJA,...]
      
2. TODO CAMPO MULTIVALORADO SE TORNARÁ OUTRA TABELA.
CAMPO MULTIVALORADO É TODO CAMPO QUE APRESENTA ALGO COMO UMA LISTA DENTRO DELE.
DIVERSOS DADOS DE TIPOS DIFERENTES (LISTA).
EXEMPLO:
list (1, VERDE, CASA, ...)
      
3. TODA TABELA NECESSITA DE PELO MENOS UM CAMPO QUE IDENTIFIQUE TODO REGISTRO COMO SENDO UNICO 
É O QUE CHAMAMOS DE "CHAVE PRIMARIA" OU "PRIMARY KEY".
*/

/*SEGUNDA FORMA NORMAL*/

/*TERCEIRA FORMA NORMAL*/

/*----------*/

/*CHAVE ESTRANGEIRA É A CHAVE PRIMARIA DE UMA TABELA, 
QUE VAI ATE A OUTRA TABELA, 
PARA FAZER REFERENCIA ENTRE REGISTROS*/

/*REGRA DE ONDE FICA A CHAVE ESTRANGEIRA (FK):
1 X 1 (UM PRA UM) A CHAVE ESTRANGEIRA FICA NA TABELA MAIS FRACA.
1 X N (UM PRA MUITOS) A CHAVE ESTRANGEIRA FICA NA TABELA N.
*/

/*----------*/

/*PROJEÇÃO, SELEÇÃO E JUNÇÃO*/

/*PROJEÇÃO -> É TUDO QUE VOCÊ QUER VER NA TELA*/

SELECT NOW() AS DATA_HORA; /*PROJEÇÃO*/

SELECT 2+2 AS SOMA; /*PROJEÇÃO*/

SELECT 2+2 AS SOMA, NOME, NOW() /*PROJEÇÃO*/
FROM CLIENTE;/*ORIGEM*/

/*O PRIMEIRO PASSO DE UMA CONSULTA É COMEÇAR POR MONTAR UM PROJEÇÃO - SELECT*/



/*SELEÇÃO -> É FILTRAR, TRAZER UM SUBCONJUNTO DO COJUNTO TOTAL DE REGISTROS DE UMA TABELA*/

SELECT NOME, SEXO, EMAIL /*PROJEÇÃO*/
FROM CLIENTE /*ORIGEM*/
WHERE SEXO = 'F'; /*SELEÇÃO*/

SELECT NUMERO, ID_CLIENTE /*PROJEÇÃO*/
FROM TELEFONE /*ORIGEM*/
WHERE TIPO = 'CEL'; /*SELEÇÃO*/

/*O SEGUNDO PASSO DE UMA CONSULTA É SELECIONAR DOS DADOS DO BANCO - WHERE*/



/*JUNÇÃO -> JOIN*/

SELECT NOME, EMAIL, IDCLIENTE
FROM CLIENTE;

SELECT ID_CLIENTE, BAIRRO, CIDADE
FROM ENDERECO;

+--------+------------------+-----------+
| NOME   | EMAIL            | IDCLIENTE |
+--------+------------------+-----------+
| JOAO   | JOAO@GMAIL.COM   |         1 |
| CARLOS | CARLOS@GMAIL.COM |         2 |
| ANA    | ANA@GMAIL.COM    |         3 |
| CLARA  | NULL             |         4 |
| JORGE  | JORGE@GMAIL.COM  |         5 |
| CELIA  | CELIA@GMAIL.COM  |         6 |
+--------+------------------+-----------+


+------------+----------+----------------+
| ID_CLIENTE | BAIRRO   | CIDADE         |
+------------+----------+----------------+
|          4 | CENTRO   | BELO HORIZONTE |
|          1 | CENTRO   | RIO DE JANEIRO |
|          3 | JARDINS  | SAO PAULO      |
|          2 | ESTACIO  | RIO DE JANEIRO |
|          6 | FLAMENGO | RIO DE JANEIRO |
|          5 | CENTRO   | VITORIA        |
+------------+----------+----------------+

/*FORMA ERRADA DE JUNÇÃO*/
/*FUNCIONA POREM É UMA GAMBIARRA*/

SELECT NOME, SEXO, BAIRRO, CIDADE /*PROJEÇÃO*/
FROM CLIENTE, ENDERECO /*ORIGEM*/
WHERE ID_CLIENTE = IDCLIENTE; /*JUNÇÃO*/
/*NÃO TEM SELEÇÃO*/

+--------+------+----------+----------------+
| NOME   | SEXO | BAIRRO   | CIDADE         |
+--------+------+----------+----------------+
| JOAO   | M    | CENTRO   | RIO DE JANEIRO |
| CARLOS | M    | ESTACIO  | RIO DE JANEIRO |
| ANA    | F    | JARDINS  | SAO PAULO      |
| CLARA  | F    | CENTRO   | BELO HORIZONTE |
| JORGE  | M    | CENTRO   | VITORIA        |
| CELIA  | F    | FLAMENGO | RIO DE JANEIRO |
+--------+------+----------+----------------+

/*ADICIONANDO SELEÇÃO NA FORMA ERRADA - USO DE OPERADOR LOGICO*/

SELECT NOME, SEXO, BAIRRO, CIDADE /*PROJEÇÃO*/
FROM CLIENTE, ENDERECO /*ORIGEM*/
WHERE ID_CLIENTE = IDCLIENTE /*ID_CLIENTE = IDCLIENTE É SEMPRE VERDADE*/ 
AND SEXO = 'F'; /*JUNÇÃO*/
/*TORNA A PESQUISA INEFICIENTE, MAIS CUSTOSA COMPUTACIONALMENTE*/

+-------+------+----------+----------------+
| NOME  | SEXO | BAIRRO   | CIDADE         |
+-------+------+----------+----------------+
| ANA   | F    | JARDINS  | SAO PAULO      |
| CLARA | F    | CENTRO   | BELO HORIZONTE |
| CELIA | F    | FLAMENGO | RIO DE JANEIRO |
+-------+------+----------+----------------+

/*FORMA CERTA DE JUNÇÃO - JOIN*/

SELECT NOME, SEXO, BAIRRO, CIDADE /*PROJEÇÃO*/
FROM CLIENTE /*ORIGEM*/
	INNER JOIN ENDERECO /*JUNÇÃO*/
	ON ID_CLIENTE = IDCLIENTE
WHERE SEXO = 'F'; /*SELEÇÃO*/

+-------+------+----------+----------------+
| NOME  | SEXO | BAIRRO   | CIDADE         |
+-------+------+----------+----------------+
| ANA   | F    | JARDINS  | SAO PAULO      |
| CLARA | F    | CENTRO   | BELO HORIZONTE |
| CELIA | F    | FLAMENGO | RIO DE JANEIRO |
+-------+------+----------+----------------+

SELECT NOME, SEXO, EMAIL, TIPO, NUMERO /*PROJEÇÃO*/
FROM CLIENTE /*ORIGEM*/
INNER JOIN TELEFONE /*JUNÇÃO*/
ON ID_CLIENTE = IDCLIENTE;

+--------+------+------------------+------+----------+
| NOME   | SEXO | EMAIL            | TIPO | NUMERO   |
+--------+------+------------------+------+----------+
| JORGE  | M    | JORGE@GMAIL.COM  | CEL  | 78945612 |
| JORGE  | M    | JORGE@GMAIL.COM  | RES  | 45642321 |
| JOAO   | M    | JOAO@GMAIL.COM   | CEL  | 79521321 |
| CARLOS | M    | CARLOS@GMAIL.COM | COM  | 98654621 |
| JOAO   | M    | JOAO@GMAIL.COM   | RES  | 46546874 |
| ANA    | F    | ANA@GMAIL.COM    | CEL  | 13215464 |
| ANA    | F    | ANA@GMAIL.COM    | CEL  | 98452154 |
| JOAO   | M    | JOAO@GMAIL.COM   | COM  | 86546511 |
| JORGE  | M    | JORGE@GMAIL.COM  | RES  | 65465845 |
| CARLOS | M    | CARLOS@GMAIL.COM | CEL  | 65412354 |
+--------+------+------------------+------+----------+

/*JOIN COM MAIS DE DUAS TABELAS*/

SELECT 
CLIENTE.NOME, 
CLIENTE.SEXO, 
ENDERECO.BAIRRO, 
ENDERECO.CIDADE, 
TELEFONE.TIPO, 
TELEFONE.NUMERO /*PROJEÇÃO*/
FROM CLIENTE /*ORIGEM*/
INNER JOIN ENDERECO /*JUNÇÃO*/
ON CLIENTE.IDCLIENTE = ENDERECO.ID_CLIENTE
INNER JOIN TELEFONE /*JUNÇÃO*/
ON TELEFONE.ID_CLIENTE = CLIENTE.IDCLIENTE;
/*USAR O tabela.coluna PARA IDENTIFICAR AS COLUNAS*/

+--------+------+---------+----------------+------+----------+
| NOME   | SEXO | BAIRRO  | CIDADE         | TIPO | NUMERO   |
+--------+------+---------+----------------+------+----------+
| JOAO   | M    | CENTRO  | RIO DE JANEIRO | COM  | 86546511 |
| JOAO   | M    | CENTRO  | RIO DE JANEIRO | RES  | 46546874 |
| JOAO   | M    | CENTRO  | RIO DE JANEIRO | CEL  | 79521321 |
| CARLOS | M    | ESTACIO | RIO DE JANEIRO | CEL  | 65412354 |
| CARLOS | M    | ESTACIO | RIO DE JANEIRO | COM  | 98654621 |
| ANA    | F    | JARDINS | SAO PAULO      | CEL  | 98452154 |
| ANA    | F    | JARDINS | SAO PAULO      | CEL  | 13215464 |
| JORGE  | M    | CENTRO  | VITORIA        | RES  | 65465845 |
| JORGE  | M    | CENTRO  | VITORIA        | RES  | 45642321 |
| JORGE  | M    | CENTRO  | VITORIA        | CEL  | 78945612 |
+--------+------+---------+----------------+------+----------+

/*JUNÇÃO - JOIN PONTEIRAMENTO (ALIAS PARA TABELAS)*/
SELECT 
C.NOME, 
C.SEXO, 
E.BAIRRO, 
E.CIDADE, 
T.TIPO, 
T.NUMERO /*PROJEÇÃO*/
FROM CLIENTE C /*ORIGEM*/
INNER JOIN ENDERECO E /*JUNÇÃO*/
ON C.IDCLIENTE = E.ID_CLIENTE
INNER JOIN TELEFONE T /*JUNÇÃO*/
ON T.ID_CLIENTE = C.IDCLIENTE;
/*MELHORA O PROCESSAMENTO*/

+--------+------+---------+----------------+------+----------+
| NOME   | SEXO | BAIRRO  | CIDADE         | TIPO | NUMERO   |
+--------+------+---------+----------------+------+----------+
| JOAO   | M    | CENTRO  | RIO DE JANEIRO | COM  | 86546511 |
| JOAO   | M    | CENTRO  | RIO DE JANEIRO | RES  | 46546874 |
| JOAO   | M    | CENTRO  | RIO DE JANEIRO | CEL  | 79521321 |
| CARLOS | M    | ESTACIO | RIO DE JANEIRO | CEL  | 65412354 |
| CARLOS | M    | ESTACIO | RIO DE JANEIRO | COM  | 98654621 |
| ANA    | F    | JARDINS | SAO PAULO      | CEL  | 98452154 |
| ANA    | F    | JARDINS | SAO PAULO      | CEL  | 13215464 |
| JORGE  | M    | CENTRO  | VITORIA        | RES  | 65465845 |
| JORGE  | M    | CENTRO  | VITORIA        | RES  | 45642321 |
| JORGE  | M    | CENTRO  | VITORIA        | CEL  | 78945612 |
+--------+------+---------+----------------+------+----------+

/*----------*/

/*CATEGORIA DE COMANDOS*/

/*
DML - DATA MANIPULATION LANGUAGE (LINGUAGEM DE MANIPULAÇÃO DE DADOS)
	- INSERT

	- UPDATE

	- DELETE

DDL - DATA DEFINITION LANGUAGE (LINGUAGEM DE DEFINIÇÃO DE DADOS)
	- CREATE

		- DATABESE

		- TABLE

	- DROP

	- ALTER
		- CHANGE
		- MODIFY
		- ADD COLUMN
			- FIRST
			- AFTER
		- DROP COLUMN

	- TRUNCATE

	- RENAME

DCL - DATA CONTROL LANGUAGE (LINGUAGEM DE CONTROLE DE DADOS)
	- GRANT
	
	- REVOKE

TCL - TOOL COMMAND LANGUAGE (LINGUAGEM DE COMANDOS DE FERRAMENTAS)
	- COMMIT

	- BACKROLL
*/

/*********/

/*DEMILITER*/

STATUS --VERIFICA OS STATUS DO SISTEMA, COMO DELIMITADOR

DEMILITER $ --MUDA O DELIMITADOR
/*DELIMITADOR É UM CARACTERE*/

/*STATUS E DEMILITER SÃO COMANDOS DE INFRAESTRUTURA
NÃO LEVAM DELIMITADOR ";" NO FINAL*/

/*MUDAR DELIMITADOR É EXCENCIAL PARA PROGRAMAR (PROCEDURE) NO MYSQL
DIFERENCIA O QUE É DELIMITADOR DO COMANDO E DELIMITADOR DO PROCEDURE*/


/*CRIANDO FUNÇÕES - PROCEDURE*/


DELIMITER $

CREATE PROCEDURE NOME()
BEGIN

	QUALQUER PROGRAMACAO;

END
$


DELIMITER $

CREATE PROCEDURE NOME_EMPRESA()
BEGIN
	
	SELECT 'UNIVERSIDADE DOS DADOS' AS EMPRESA;

END
$

/* CHAMANDO UMA PROCEDURE */

DELIMITER ;

CALL NOME_EMPRESA();

/* PROCEDURES COM PARAMETROS */

SELECT 10 + 10 AS CONTA;

DELIMITER $

CREATE PROCEDURE CONTA()
BEGIN
	
	SELECT 10 + 10 AS CONTA;

END
$

CALL CONTA();

/*APAGANDO UMA PROCEDURE - FUNÇÃO*/

DROP PROCEDURE CONTA;

DELIMITER $

CREATE PROCEDURE CONTA(NUMERO1 INT, NUMERO2 INT)
BEGIN
	
	SELECT NUMERO1 + NUMERO2 AS CONTA;

END
$

CALL CONTA(100,50)$
CALL CONTA(345634,4354)$
CALL CONTA(55654,56760)$
CALL CONTA(45646,6766)$

DELIMITER ;