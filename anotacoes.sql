/*MODELAGEM BASICA

ENTIDADES = TABELA
CAMPOS  = ATRIBUTOS*/

CLIENTE

NOME - CARACTER (30)
CPF - NUMERICO (11)
EMAIL - CARACTER (30)
TELEFONE - CARACTER (30)
ENDERECO - CARACTER (100)
SEXO - CARACTER (1)

/*PROCESSOS DE MODELANGEM */

/* FASE 01 E FASE 02  - AD ADM DE DADOS
MODELAGEM CONCEITUAL - RASCUNHO
MODELAGEM LOGICA - QUALQUER PROGRAMA DE MODELAGEM*/

/*FASE 03 - DBA / AD
MODELAGEM FISICA*/

/*INICIANDO A MODELAGEM FISICA*/

/*CRIANDO O BANCO DE DADOS*/

CREATE DATABASE PROJETO; /*CRIAÇÃO DO BANCO DE DADOS PROJETO*/

/*CONECTANDO-SE AO BANCO DE DADOS*/

USE PROJETO;

/*VERIFICANDO ONDE ESTOU CONECTADO*/
STATUS;

/*CRIANDO A TABELA CLIENTES*/

CREATE TABLE CLIENTE(
	NOME VARCHAR(30),
	CPF INT (11),
	EMAIL VARCHAR (30),
	TELEFONE VARCHAR (30),
	ENDERECO VARCHAR (100),
	SEXO CHAR(1)

);

/*VERIFICANDO AS TABELAS DO BANCO*/

SHOW TABLES;

/*VERIFICANDO OS BANCO DE DADOS NO SISTEMA*/

SHOW DATABASES;

/*DESCOBRINDO COMO É A ESTRUTURA DE UMA TABELA*/

DESC CLIENTE; 

/*INSERINDO DADOS NA TABELA - INSERT INTO NOME_DA_TABELA*/

/*FORMATO 01 - OMITINDO COLUNAS(CAMPOS)*/

INSERT INTO CLIENTE VALUES ('JOAO',988638273,'JOAO@GMAIL.COM','22923110','MAIA LACERDA - ESTACIO - RIO DE JANEIRO - RJ','M');
INSERT INTO CLIENTE VALUES ('CELIA',541521456,'CELIA@GMAIL.COM','25078869','RIACHUELO - CENTRO - RIO DE JANEIRO - RJ','F');
INSERT INTO CLIENTE VALUES ('JORGE',885755896,NULL,'58748895','OSCAR CURY - BOM RETIRO - PATOS DE MINAS - MG','M');

/*FORMATO 02 - COLOCANDO AS COLUNAS*/

INSERT INTO CLIENTE (NOME,SEXO,ENDERECO, TELEFONE, CPF) VALUES ('LILIAN', 'F','SENADOR SOARES - TIJUCA - RIO DE JANEIRO - RJ','947785696',887774856);

/*FORMATO 03 - INSERT COMPACTO - SOMENTE MYSQL*/

INSERT INTO CLIENTE VALUES ('ANA',85548962,'ANA@GLOBO.COM','548556985','PRES ANTONIO CARLOS - CENTRO - SAO PAULO - SP','F'),
('CARLA',7745828,'CARLA@TERATI.COM','66587458','SAMUEL SILVA - CENTRO - BELO HORIZONTE - MG','F');

/*----------*/

/*COMANDO SELECT*/

/*seleção, projeção e junção*/

/*projeção/construção*/

SELECT NOW() AS DATA_HORA, 'SERGIO PEDRO' AS NOME_CLIENTE;

SELECT 'SERGIO PEDRO';

/*seleção*/

SELECT NOME AS CLIENTE, SEXO, EMAIL FROM CLIENTE;

SELECT NOME, SEXO, EMAIL, ENDERECO, NOW() AS HORA FROM CLIENTE;

SELECT * FROM CLIENTE; /*DIMINUI A EFICIENCIA DA PESQUISA*/

/*FILTRANDO DADOS COM WHERE E LIKE*/

/*----------*/

/*FILTRANDO*/

SELECT NOME, SEXO FROM CLIENTE
WHERE SEXO = 'M';

SELECT NOME, ENDERECO FROM CLIENTE
WHERE SEXO = 'F';

/*UTILIZANDO LIKE E CARACTER CORINGA*/

/*'%' -> QUALQUER COISA*/
/*'_' -> UM CARACTER DESCONHECIDO */

SELECT NOME, SEXO FROM CLIENTE
WHERE ENDERECO LIKE '%RJ'; /*COMEÇA COM QUALQUER COISA*/

SELECT NOME, SEXO FROM CLIENTE
WHERE ENDERECO LIKE 'OSCAR%'; /*TERMINA COM QUALQUER COISA*/

SELECT NOME, SEXO FROM CLIENTE
WHERE ENDERECO LIKE '%CENTRO%';/*COMEÇA E TERMINA COM QUALQUER COISA*/

/*OPERADORES LOGICOS*/

/*OR -> PARA QUE A SAIDA DA QUERY SEJA VERDADEIRA, BASTA QUE APENAS UMA CONDIÇÃO SEJA VERDAEIRA
AND -> PARA QUE A SAIDA DA QUERY SEJA VERDADEIRA, TODAS AS CONDIÇÔES SEJAM VERDADEIRAS*/

SHOW DATABASES;
USE PROJETO;
SELECT * FROM CLIENTE;


/*OR - OU*/

SELECT NOME, SEXO, ENDERECO FROM CLIENTE
WHERE
SEXO = 'M' OR ENDERECO LIKE '%RJ';

SELECT NOME, SEXO, ENDERECO FROM CLIENTE
WHERE
SEXO = 'F' OR ENDERECO LIKE '%ESTACIO%';


/*AND - E*/

SELECT NOME, SEXO, ENDERECO FROM CLIENTE
WHERE
SEXO = 'M' AND ENDERECO LIKE '%RJ';

SELECT NOME, SEXO, ENDERECO FROM CLIENTE
WHERE
SEXO = 'F' AND ENDERECO LIKE '%ESTACIO%';

/*FILTRANDO VALORES NULOS*/
/*USO DO "IS NULL " E "IS NOT NULL"*/

SELECT NOME, SEXO, ENDERECO FROM CLIENTE
WHERE EMAIL IS NULL;

SELECT NOME, SEXO, ENDERECO FROM CLIENTE
WHERE EMAIL IS NOT NULL;

/*----------*/

/*COUNT (*), GROUP BY, PERFORMANCE COM OPERADORES LOGICOS*/

/*CONTANDO OS REGISTROS DE UMA TABELA*/

SELECT COUNT(*) AS "CONTIDADE DE REGISTROS DA TABELA CLIENTE"
FROM CLIENTE; /*CONTA TODOS OS REGISTROS NA TABELA CLIENTE*/

/*AGRUPADOR*/

SELECT SEXO, COUNT(*)
FROM CLIENTE
GROUP BY SEXO; /*AGRUPA OS DADOS ENTORNO DO CAMPO "SEXO"*/

/*----------*/

/*PERFORMANCE EM OPERADORES LOGICOS*/

/*NO CASO OR - COLOCAR A CONDIÇÃO COM MAIOR INCIDENCIA DE VERDADEIRO NA FRENTE,
PPOIS ASSIM NÃO SERÁ AVALIADO A SEGUNDA CONDIÇÃO,
DADO QUE, SE A PRIMEIRA CONDIÇÃO FOR VERDADEIRA, A PREMISSA TODA É VERDADEIRA*/

/*NO CASO AND - COLOCAR A CONDIÇÃO COM MENOR INCIDENCIA DE VERDADEIRO NA FRENTE,
PPOIS ASSIM NÃO SERÁ AVALIADO A SEGUNDA CONDIÇÃO,
DADO QUE, SE A PRIMEIRA CONDIÇÃO FOR FALSA, A PREMISSA TODA É FALSA*/

/*----------*/

/*UTILIZANDO O UPDATE PARA ATUALIZAR VALORES*/
/*HÁ DUAS FORMAS DE ATUALIZAÇÃO DE VALORES UPDATE SEM FILTRO E COM FILTRO*/

/*UPDATE SEM FILTRO
ATUALIZA TODOS OS DADOS DE UM DETERMINADO CAMPO DE UMA VEZ*/
UPDATE CLIENTE SET EMAIL = 'LILIAN@GMAIL.COM';

/*UPDATE COM FILTRO - WHERE
ATUALIZA UM DETERMINADO REGISTRO DE UM CAMPO*/
UPDATE CLIENTE
SET EMAIL = 'JOAO@GMAIL.COM'
WHERE NOME = 'JOAO';

/*----------*/

/*DELETANDO REGISTROS COM A CLAUSULA DELETE*/

/*DELETANDO TODOS OS REGISTROS DE UMA TABELA*/
DELETE FROM CLIENTE;

/*ANTES DE DELETAR VERIFICA O QUE ESTA DELETETANDO*/
SELECT COUNT(*) FROM CLIENTE; -- TOTAL 6 REGISTROS

/*DETERMINAR QUANTOS REGISTROS VÃO APARECER PELO FILTRO
ANTES DE DELETAR*/
SELECT COUNT(*) FROM CLIENTE -- TOTAL 1 REGISTRO
WHERE NOME = 'ANA';

/*DELETANDO UM DETERMINADO REGISTRO DE UMA TABELA*/
DELETE FROM CLIENTE
WHERE NOME = 'ANA';

/*CONTAGEM FINAL, DEPOIS DO DELETE*/
SELECT COUNT(*) FROM CLIENTE; -- TOTAL 5 REGISTROS

/*----------*/

/*PRIMEIRA FORMA NORMAL
3 REGRAS:
1. TODO CAMPO VETORIZADO SE TORNÁ OUTRA TABELA.
CAMPO VETORIZADO É TODO CAMPO QUE APRESENTA ALGO COMO UM VETOR  DENTRO DELE.
VARIOS DADOS DO MESMO TIPO (VETOR).
EXEMPLO:
vetor [VERDE, AMARELO, LARANJA,...]
      
2. TODO CAMPO MULTIVALORADO SE TORNARÁ OUTRA TABELA.
CAMPO MULTIVALORADO É TODO CAMPO QUE APRESENTA ALGO COMO UMA LISTA DENTRO DELE.
DIVERSOS DADOS DE TIPOS DIFERENTES (LISTA).
EXEMPLO:
list (1, VERDE, CASA, ...)
      
3. TODA TABELA NECESSITA DE PELO MENOS UM CAMPO QUE IDENTIFIQUE TODO REGISTRO COMO SENDO UNICO 
É O QUE CHAMAMOS DE "CHAVE PRIMARIA" OU "PRIMARY KEY".
*/

/*SEGUNDA FORMA NORMAL*/

/*TERCEIRA FORMA NORMAL*/
